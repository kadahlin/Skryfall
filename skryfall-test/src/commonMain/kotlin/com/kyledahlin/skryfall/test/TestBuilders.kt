package com.kyledahlin.skryfall.test

import com.kyledahlin.skryfall.objects.*
import kotlinx.datetime.LocalDate
import kotlinx.serialization.json.JsonObject

fun card(
    arenaId: Int? = null,
    id: Uuid = Uuid(""),
    lang: String = "",
    mtgoId: Int? = null,
    mtgoFoilId: Int? = null,
    multiverseIds: List<Int>? = null,
    tcgPlayerId: Int? = null,
    cardMarketId: Int? = null,
    oracleId: Uuid = Uuid(""),
    printsSearchUri: Uri = Uri(""),
    rulingsUri: Uri = Uri(""),
    scryfallUri: Uri = Uri(""),
    uri: Uri = Uri(""),
    artist: String? = null,
    booster: Boolean = false,
    borderColor: String = "",
    cardBackId: Uuid = Uuid(""),
    collectorNumber: String = "",
    contentWarning: Boolean? = null,
    digital: Boolean = false,
    flavorName: String? = null,
    flavorText: String? = null,
    frameEffects: List<String>? = null,
    frame: String = "",
    fullArt: Boolean = false,
    games: List<String> = listOf(),
    highresImage: Boolean = false,
    illustrationId: Uuid? = null,
    imageUris: JsonObject? = null,
    prices: JsonObject = JsonObject(emptyMap()),
    printedName: String? = null,
    printedText: String? = null,
    printedTypeLine: String? = null,
    promo: Boolean = false,
    promoTypes: List<String>? = null,
    purchaseUris: JsonObject = JsonObject(emptyMap()),
    rarity: String = "",
    relatedUris: JsonObject = JsonObject(emptyMap()),
    releasedAt: LocalDate = LocalDate(1, 1, 1),
    reprint: Boolean = false,
    scryfallSetUri: Uri = Uri(""),
    setType: String = "",
    setUri: Uri = Uri(""),
    set: String = "",
    storySpotlight: Boolean = false,
    textless: Boolean = false,
    variation: Boolean = false,
    variationOf: Uuid? = null,
    watermark: String? = null,
    preview: Preview? = null,
    allParts: List<RelatedCard>? = null,
    cardFaces: List<CardFace>? = null,
    cmc: Double = 0.0,
    colors: List<CardColor>? = null,
    colorIdentity: List<CardColor> = emptyList(),
    colorIndicator: List<CardColor>? = null,
    edhrecRank: Int? = null,
    foil: Boolean = false,
    handModifier: String? = null,
    keywords: List<String> = emptyList(),
    layout: String = "",
    legalities: JsonObject = JsonObject(emptyMap()),
    lifeModifier: String? = null,
    loyalty: String? = null,
    manaCost: String? = null,
    name: String = "",
    nonfoil: Boolean = false,
    oracleText: String? = null,
    oversized: Boolean = false,
    power: String? = null,
    producedMana: List<CardColor>? = null,
    reserved: Boolean = false,
    toughness: String? = null,
    typeLine: String = ""
): Card = Card(
    arenaId = arenaId,
    id = id,
    lang = lang,
    mtgoId = mtgoId,
    mtgoFoilId = mtgoFoilId,
    multiverseIds = multiverseIds,
    tcgPlayerId = tcgPlayerId,
    cardMarketId = cardMarketId,
    oracleId = oracleId,
    printsSearchUri = printsSearchUri,
    rulingsUri = rulingsUri,
    scryfallUri = scryfallUri,
    uri = uri,
    artist = artist,
    booster = booster,
    borderColor = borderColor,
    cardBackId = cardBackId,
    collectorNumber = collectorNumber,
    contentWarning = contentWarning,
    digital = digital,
    flavorName = flavorName,
    flavorText = flavorText,
    frameEffects = frameEffects,
    frame = frame,
    fullArt = fullArt,
    games = games,
    highresImage = highresImage,
    illustrationId = illustrationId,
    imageUris = imageUris,
    prices = prices,
    printedName = printedName,
    printedText = printedText,
    printedTypeLine = printedTypeLine,
    promo = promo,
    promoTypes = promoTypes,
    purchaseUris = purchaseUris,
    rarity = rarity,
    relatedUris = relatedUris,
    releasedAt = releasedAt,
    reprint = reprint,
    scryfallSetUri = scryfallSetUri,
    setType = setType,
    setUri = setUri,
    set = set,
    storySpotlight = storySpotlight,
    textless = textless,
    variation = variation,
    variationOf = variationOf,
    watermark = watermark,
    preview = preview,
    allParts = allParts,
    cardFaces = cardFaces,
    cmc = cmc,
    colors = colors,
    colorIdentity = colorIdentity,
    colorIndicator = colorIndicator,
    edhrecRank = edhrecRank,
    foil = foil,
    handModifier = handModifier,
    keywords = keywords,
    layout = layout,
    legalities = legalities,
    lifeModifier = lifeModifier,
    loyalty = loyalty,
    manaCost = manaCost,
    name = name,
    nonfoil = nonfoil,
    oracleText = oracleText,
    oversized = oversized,
    power = power,
    producedMana = producedMana,
    reserved = reserved,
    toughness = toughness,
    typeLine = typeLine
)

fun relatedCard(
    id: Uuid = Uuid(""),
    component: Component = Component.TOKEN,
    name: String = "",
    typeLine: String = "",
    uri: Uri = Uri("")
): RelatedCard = RelatedCard(
    id = id, component = component, name = name, typeLine = typeLine, uri = uri
)

fun cardFace(
    artist: String? = null,
    colorIndicator: List<CardColor>? = null,
    colors: List<CardColor>? = null,
    flavorText: String? = null,
    illustrationId: Uuid? = null,
    imageUris: JsonObject? = null,
    loyalty: String? = null,
    manaCost: String = "",
    name: String = "",
    oracleText: String? = null,
    power: String? = null,
    printedText: String? = null,
    printedName: String? = null,
    printedTypeLine: String? = null,
    toughness: String? = null,
    typeLine: String = "",
    watermark: String? = null
): CardFace = CardFace(
    artist = artist,
    colorIndicator = colorIndicator,
    colors = colors,
    flavorText = flavorText,
    illustrationId = illustrationId,
    imageUris = imageUris,
    loyalty = loyalty,
    manaCost = manaCost,
    name = name,
    oracleText = oracleText,
    power = power,
    printedText = printedText,
    printedName = printedName,
    printedTypeLine = printedTypeLine,
    toughness = toughness,
    typeLine = typeLine,
    watermark = watermark
)